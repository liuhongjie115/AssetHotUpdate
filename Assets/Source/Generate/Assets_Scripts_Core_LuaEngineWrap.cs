//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Assets_Scripts_Core_LuaEngineWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Assets.Scripts.Core.LuaEngine), typeof(Assets.Scripts.Util.Single<Assets.Scripts.Core.LuaEngine>));
		L.RegFunction("InitEngine", InitEngine);
		L.RegFunction("Start", Start);
		L.RegFunction("GetLuaTraceback", GetLuaTraceback);
		L.RegFunction("StartLoop", StartLoop);
		L.RegFunction("LuaLoadComplete", LuaLoadComplete);
		L.RegFunction("New", _CreateAssets_Scripts_Core_LuaEngine);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("luaTranslator", get_luaTranslator, set_luaTranslator);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateAssets_Scripts_Core_LuaEngine(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				Assets.Scripts.Core.LuaEngine obj = new Assets.Scripts.Core.LuaEngine();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: Assets.Scripts.Core.LuaEngine.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int InitEngine(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2)
			{
				Assets.Scripts.Core.LuaEngine obj = (Assets.Scripts.Core.LuaEngine)ToLua.CheckObject<Assets.Scripts.Core.LuaEngine>(L, 1);
				UnityEngine.MonoBehaviour arg0 = (UnityEngine.MonoBehaviour)ToLua.CheckObject<UnityEngine.MonoBehaviour>(L, 2);
				obj.InitEngine(arg0);
				return 0;
			}
			else if (count == 3)
			{
				Assets.Scripts.Core.LuaEngine obj = (Assets.Scripts.Core.LuaEngine)ToLua.CheckObject<Assets.Scripts.Core.LuaEngine>(L, 1);
				UnityEngine.MonoBehaviour arg0 = (UnityEngine.MonoBehaviour)ToLua.CheckObject<UnityEngine.MonoBehaviour>(L, 2);
				System.Action arg1 = (System.Action)ToLua.CheckDelegate<System.Action>(L, 3);
				obj.InitEngine(arg0, arg1);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: Assets.Scripts.Core.LuaEngine.InitEngine");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Start(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1)
			{
				Assets.Scripts.Core.LuaEngine obj = (Assets.Scripts.Core.LuaEngine)ToLua.CheckObject<Assets.Scripts.Core.LuaEngine>(L, 1);
				obj.Start();
				return 0;
			}
			else if (count == 2)
			{
				Assets.Scripts.Core.LuaEngine obj = (Assets.Scripts.Core.LuaEngine)ToLua.CheckObject<Assets.Scripts.Core.LuaEngine>(L, 1);
				System.Action arg0 = (System.Action)ToLua.CheckDelegate<System.Action>(L, 2);
				obj.Start(arg0);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: Assets.Scripts.Core.LuaEngine.Start");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetLuaTraceback(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Assets.Scripts.Core.LuaEngine obj = (Assets.Scripts.Core.LuaEngine)ToLua.CheckObject<Assets.Scripts.Core.LuaEngine>(L, 1);
			string o = obj.GetLuaTraceback();
			LuaDLL.lua_pushstring(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int StartLoop(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Assets.Scripts.Core.LuaEngine obj = (Assets.Scripts.Core.LuaEngine)ToLua.CheckObject<Assets.Scripts.Core.LuaEngine>(L, 1);
			obj.StartLoop();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaLoadComplete(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Assets.Scripts.Core.LuaEngine obj = (Assets.Scripts.Core.LuaEngine)ToLua.CheckObject<Assets.Scripts.Core.LuaEngine>(L, 1);
			obj.LuaLoadComplete();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_luaTranslator(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Assets.Scripts.Core.LuaEngine obj = (Assets.Scripts.Core.LuaEngine)o;
			LuaInterface.ObjectTranslator ret = obj.luaTranslator;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index luaTranslator on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_luaTranslator(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Assets.Scripts.Core.LuaEngine obj = (Assets.Scripts.Core.LuaEngine)o;
			LuaInterface.ObjectTranslator arg0 = (LuaInterface.ObjectTranslator)ToLua.CheckObject<LuaInterface.ObjectTranslator>(L, 2);
			obj.luaTranslator = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index luaTranslator on a nil value");
		}
	}
}

